Начинаем со строки <?xml version='1.0'?)
<root>  // корневой тег root получает доступ что хранится в теге
	<tag> value </tag>
</root>

tag-test // можно писать через дефис и чтобы корретно работали нужно поместить в {''};
---------------------------------------
<meta charset="utf-8">

<?php
    error_reporting(E_ALL);
    ini_set('display_errors', 'on');

    $xml = simlexml_load_file ('test.xml'); // Где test.xml эта ссылка на массив

    echo $xml(переменная) -> tag->test;

?>
---------------------------------------
<?xml version='1.0'?)
<root>  
    <tag>
	<test> value </test>
    </tag>
</root>

чтобы получить доступ к тегу нужно напсиать echo $xml(переменная) -> tag->test;

ЕСЛИ МАССИВ 
<?xml version='1.0'?)
<root>  
    <tag>
	<test> value1 </test>
	<test> value2 </test>
    </tag>
</root>

чтобы перебрать массив выше нужно прописать
 foreach ($xml->tag->test as $test)  // Цикл ($xml->tag->test присваиваем переменной $test) и выводим
echo $test . ' ' . ;
}

----------------------------------------
C аттрибутом
<?xml version='1.0'?)
<root>  
    <tag>
	<test attr="1"> value1 </test>
	<test attr="2"> value2 </test>
    </tag>
</root>
=============================================================================
<meta charset="utf-8">

<?php
    error_reporting(E_ALL);
    ini_set('display_errors', 'on');

    $xml = simlexml_load_file ('test.xml');

foreach ($xml->tag->test as $test)  // Цикл ($xml->tag->test присваиваем переменной $test) и выводим
{
echo $test . ' ' . $test['attr'] . <br>;
}
---------------------------------------------------------------------------------------
api(API) - некоторый набор доступных функций

чтобы перебрать массив берём команду Foreach ($xml <- массив) as(как) $название переменной.
После чего открываем фигурные скобки и пишем echo $переменная -> атрибут который нужно вывести . ' ' . $переменная -> ещё 1 атрибут и <br>;
чтобы на новой строки следующие были.

